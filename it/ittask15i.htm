<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>ittask10i</TITLE>
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#f0f0f0">

<FONT FACE="Arial" SIZE=4><P ALIGN="CENTER">Загальна постановка задачі та варіанти</P>
<P ALIGN="CENTER">лабораторного практикуму</P>
</FONT><U><FONT FACE="Arial" SIZE=4><P>Задача: </P>
</U><P ALIGN="CENTER">"Фрагментарна реалізація систем управління табличними базами даних"</P>
<U>
<P>І. Загальні вимоги</P>
</U></FONT><FONT FACE="Arial"><P ALIGN="JUSTIFY">Основні вимоги щодо структури бази:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>кількість таблиць принципово не обмежена (реляції між таблицями не враховувати); </LI></P>
<LI>кількість полів та кількість записів у кожній таблиці також принципово не обмежені. </LI></UL>

<P>У кожній роботі треба забезпечити підтримку (для полів у таблицях)  наступних (загальних для всіх варіантів!) типів:</P>

<UL>
<LI>integer; </LI>
<LI>real; </LI>
<LI>char;</LI>
<LI>string.</LI></UL>

<P>Також у кожній роботі треба реалізувати функціональну підтримку для: </P>

<UL>
<LI>створення бази; </LI>
<LI>створення (із валідацією даних) та знищення таблиці з бази; </LI>
<LI>перегляду та редагування рядків таблиці; </LI>
<LI>збереження табличної бази на диску та, навпаки, зчитування її з диску. </LI></UL>

</FONT><U><FONT FACE="Arial" SIZE=4>
<P>ІІ. Варіанти додаткових типів</P>
</U></FONT><FONT FACE="Arial"><P>Потрібно забезпечити підтримку (для можливого використання у таблицях) двох додаткових типів у відповідності з одним із наступних варіантів: </P>
<P>
0) color (RGB код кольору); colorInvl;<BR>
1) текстові файли; integerInvl; <BR>
2) html-файли; stringInvl;<BR>
3) charInvl; string(charInvl);<BR>
4) перелiчуваний тип (множину значень складає набiр рядкiв); 
email; <BR>
5) date; dateInvl;<BR>
6) time; timeInvl; <BR>
7) $ (грошовий форматний тип, max$ =10,000,000,000,000.00); $Invl;<BR>
8) complexInteger; complexReal;<BR>
9) picture-файли (один з форматів); realInvl; <BR>
<BR>
<B>Примiтка</B>. Типи із суфіксом Invl (наприклад, colorInvl, integerInvl тощо) є "iнтервальними" типами. </P>
</FONT><U><FONT FACE="Arial" SIZE=4>

<P>ІІІ. Варіанти додаткових операцiй над таблицями</P>
</U></FONT><FONT FACE="Arial"><P>Потрібно реалізувати операцiї над таблицями у відповідності з варіантом:</P>

<P>
0) сортування таблиці за одним ключем; <BR>
1) пошук (за шаблоном) та перегляд знайдених рядкiв таблицi; <BR>
2) об'єднання таблиць; <BR>
3) рiзниця таблиць; <BR>
4) перетин таблиць; <BR>
5) вилучення повторюваних рядкiв у таблиці; <BR>
6) прямий добуток двох таблиць; <BR>
7) проекцiя таблиць; <BR>
8) сполучення таблиць (за спiльним полем); <BR>
9) перейменування та/або перестановка колонок таблиці (з відповідною зміною схеми таблиці). </P>

</FONT><U><FONT FACE="Arial" SIZE=4><P>IV. Варіанти індивідуальних завдань </P>
</U></FONT><FONT FACE="Arial"><P>Загалом, окремий варіант індивідуального завдання визначається парою:</P>

<UL>
<UL>
</FONT><LI><FONT FACE="Arial">варіант додаткових типів даних (розділ II); </LI>
</FONT><LI><FONT FACE="Arial">варіант додаткових операцій над таблицями бази (розділ III). </FONT></LI></UL>
</UL>



<U><FONT FACE="Arial" SIZE=4><P><A NAME="t01"></A></P>
<P>V. Завдання лабораторного практикуму</P>
</U></FONT><B>



<FONT FACE="Arial"><P ALIGN="JUSTIFY">
 <P ALIGN="CENTER"><B>Попередній етап</B> </P>
0) Попередній етап </B>(нульовий етап, допуск до виконання). <B>Функціональна специфікація </B> системи управління табличними базами даних (СУТБД) у вигляді однієї або кількох <B>діаграм прецедентів</B> UML.<BR>
 Без здачі попереднього етапу не приймається жоден з основних етапів лабораторного практикуму.

<P></P> 


<P ALIGN="CENTER"><B>Основні етапи</B> </P>

Основні етапи можуть виконуватись <B>у будь-якому порядку</B> до того ж  <B> вибірково</B>. </P>

Перелік варіантів основних етапів:

<B><P ALIGN="JUSTIFY">

1) Використання UML </B> при проектуванні та специфікації програмних систем.</P>
</FONT><FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Розробити щонайменше 12 UML-діаграм:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>діаграм варіантів використання (діаграм прецедентів) - 1..* (щонайменше до трьох прецедентів потрібно описати потоки подій); </LI></P>
<LI>діаграм класів - 2..*. Щонайменше одна з них має містити класи <B>"Таблиця"</B> та <B>"База"</B>, подаючи відношення як між цими класами, так і з класами, що використовуються для опису схем, рядків таблиці тощо. Щонайменше одна з діаграм має бути VOPC-діаграмою для “індивідуального” прецедента (відповідно до варіанту додаткової “індивідуальної” операції - </FONT><FONT FACE="Arial">див. розділ III </FONT><FONT FACE="Arial" SIZE=2>). (VOPC - це абревіатура від View Of Participating Classes); </LI>
<LI>діаграм діяльності - 0..*;. </LI>
<LI>діаграм взаємодії - 4..*. Щонайменше одна з діаграм має бути побудованою для “індивідуального” прецедента (у відповідності до варіанта додаткової операції).  </LI>
<LI>діаграм станів - 0..*; </LI>
<LI>діаграм компонентів - 2..* (щонайменше по одній - для не розподіленої та розподіленої версій системи відповідно); </LI>
<LI>діаграм розгортання - 1..* (щонайменше - для розподіленої системи). </LI></UL>
</FONT><FONT FACE="Arial" >
<B><P ALIGN="JUSTIFY">

2-3) Розробка локальної (не розподіленої) версії СУТБД</B> (із власною реалізацією класів "Таблиця" та "База"):
 <UL>
   <LI> Розробка (власних!) класів для понять "Таблиця", "База" та, можливо, деяких інших  класів, спряжених із поняттям "Таблиця" (наприклад, "Схема таблиці", "Атрибут", "Рядок таблиці" тощо).</LI>
   <LI> Створення UML-діаграми класів (з наявними між класами відношеннями). </LI>
   <LI> Проведення unit-тестування. Надати 3..* тести, один з яких має бути призначеним для тестуванням “індивідуальної” (варіантної) операції з розділу III.</LI>
   <LI> Забезпечення інтерфейсу користувача на основі форм.</LI>
</UL>
 (Виконання двох пунктів розглядається як виконання одного етапу).
<B><P ALIGN="JUSTIFY">

4-5) Один або два </B>варіанти <B>розподілених версій</B> системи (із реалізацією програм-клієнтів та програм-серверів), використовуючи технології віддаленої взаємодії на зразок Java RMI/JRMP, Java RMI/IIOP, Net Remoting, WCF, IIOP Net, EJB тощо.</P>
<B><P ALIGN="JUSTIFY">

6) Web-сервіси </B>(або SOAP-, SOAP/WSDL-, SOAP/XML-сервіси). Реалізація СУТБД на основі технології web-сервісів (сервер, клієнт).</P>
<B><P ALIGN="JUSTIFY">

7) Web-сервіси. Різні платформи. </B> Для web-сервісу (серверної частини з попереднього етапу) розробити варіант клієнтської програми на <B>"альтернативній платформі"</B>. Наприклад, для реалізованого на Java web-сервісу клієнтську частину можна розробити під .NET  чи, навпаки, для реалізованого ASMX web-сервісу клієнтську частину можна розробити на Java). Клієнтський проект може бути функціонально обмеженим (*).</P>
<B><P ALIGN="JUSTIFY">

8)</B> Варіант розподіленої версії з використанням <B>COM або CORBA</B> (сервер, клієнт).</P>
<B><P ALIGN="JUSTIFY">

9) Сумісність технологій. </B> Серед можливих варіантів пропонуються такі: ASMX web-сервіси  - WCF,  Java RMI/IIOP - CORBA). Треба, наприклад, для ASMX web-сервісу (етап 6) розробити WCF-клієнт або, навпаки, для WCF-сервісу  -  ASMX-клієнт.</P>
<B><P ALIGN="JUSTIFY">

10) REST web-сервіси (REST API). </B> Реалізація доступу до даних, орієнтуючись на їх ієрархічну структуру: база -&gt; таблиця -&gt; ... та на використання HTTP-запитів (як мінімум GET, POST та DELETE). Потрібно розробити  REST API сервер та продемонструвати його роботу на відповідних тестових HTTP-запитах (Postman, cURL тощо).</P>
<B><P ALIGN="JUSTIFY">

11) REST web-сервіси (REST API) + HATEOAS.</B> </P>
<B><P ALIGN="JUSTIFY">

12) GraphQL API. </B> Потрібно розробити GraphQL API сервер для забезпечення, як мінімум, доступу до вхідних та результуючих даних варіантної операції, надаючи можливість обирати той чи інший рівень деталізації цих даних. Для демонстрації роботи сервера на тестових клієнтських HTTP-запитах окрім традиційних засобів (Postman, cURL тощо) можна скористатись Graph<B><I>i</I></B>ql.</P>
<B><P ALIGN="JUSTIFY">

13-14) Один або два </B>варіанти <B>Web-проектів. </B> (AspNetWebApi, ASP .NET, ASP .NET MVC, WPF, JSP, JavaServlet, Spring, Struts, Struts 2, JSF, Tapestry, Wicket, GWT тощо). Кожен проект може бути функціонально обмеженим (*).</P>
<B><P ALIGN="JUSTIFY">


15) Web-проект </B>із використанням <B>AJAX. </B> Щонайменше повинно забезпечуватись часткове перезавантаження web-сторінки. Проект може бути функціонально обмеженим (*).</P>
<B><P ALIGN="JUSTIFY">


16) Мобільний проект </B> (Android, iOS, Windows Phone тощо). Проект може бути функціонально обмеженим (*).</P>
<B><P ALIGN="JUSTIFY">

17)</B> Варіант проекту із використанням <B>хмарних технологій </B>(від Microsoft, Google, Amazon, Hiroku тощо). Проект може бути функціонально обмеженим (*).</P>
<B><P ALIGN="JUSTIFY">

18)</B> Застосування <B>мікросервісної архітектури </B>при реалізації бізнес-логіки проекту.</P>
<B><P ALIGN="JUSTIFY">

19) (2-6 балів) Інтегроване (Mock-) </B> тестування для однієї із розподілених версій.</P>
<B><P ALIGN="JUSTIFY">

20) (2-6 балів) </B>Варіант проекту із використанням <B> реляційної СУБД </B>(замість використання серіалізації об'єктів для збереження даних).
<B><P ALIGN="JUSTIFY">

21) (2-6 балів) </B>Варіант проекту із використанням <B> СУБД Mongo </B>або її аналогів (замість використання серіалізації об'єктів для збереження даних).
<B><P ALIGN="JUSTIFY">

22) (2-6 балів) Інтегроване (Mock-) </B> тестування у проектах, що використовують реальні СУБД (реляційні чи ні) для збереження даних (етапи 20, 21).</P>
<B><P ALIGN="JUSTIFY">

23) (2-6 балів) </B>Ще одна версія <B>мобільного проекту.</B>
<B><P ALIGN="JUSTIFY">

24) (2 бали) Рефлексія (reflection). </B>Реалізація "динамічних викликів" на прикладі одного з об'єктів клієнтської частини розподіленої версії.</P>
<B><P ALIGN="JUSTIFY">

25) (4 бали) Рефлексія (reflection). </B>Інтроспекція одного з основних бізнес-об'єктів, розробка GUI для надання значень параметрам та забезпечення викликів методів такого об'єкта.</P>
<B><P ALIGN="JUSTIFY">



<B><U><P>(*) ЯК МІНІМУМ </U></B> має забезпечуватись демонстрація виконання варіантної операції (див. розділ III ) над таблицями даних, що також відповідають варіанту (див. розділ II). </P></B></FONT>

<U><FONT FACE="Arial" SIZE=4><P ALIGN="JUSTIFY">VI. Терміни виконання та форма звітування</P>
</U></FONT>

<FONT FACE="Arial">
<P ALIGN="JUSTIFY">

Основні етапи можуть виконуватись у ДОВІЛЬНОМУ ПОРЯДКУ. Тому нижче вказані терміни звітування по КІЛЬКОСТІ ЕТАПІВ:<Br> 
28.09 -- попередній етап; <Br>
05.10 -- 1 основний етап; <Br>
12.10 -- 2 основні етапи; <Br>
19.10 -- 3 основні етапи; <Br>
26.10 -- 4 основні етапи; <Br>
02.11 -- 5 основних етапів; <Br>
09.11 -- 6 основних етапів; <Br>
16.11 -- 7 основних етапів; <Br>
23.11 -- 8 основних етапів; <Br>
30.11 -- 9 основних етапів; <Br>
07.12 -- загальний <s>друкований</s> звіт. <Br>
 </P>


<B><P ALIGN="JUSTIFY">За кожний повний чи неповний тиждень запізнення з виконанням етапу знімається 1 бал.</B> </P>

<P ALIGN="JUSTIFY">В останні два тижні теоретичного навчання дозволяється здавати не більше, ніж по два етапи. </P>

<P ALIGN="JUSTIFY">З лабораторного практикуму готується загальний <B><s>друкований</s> звіт</B>, який має складатись із <B>звітів до окремих етапів</B> (як складових частин загального звіту). </P>

</FONT>

<U><FONT FACE="Arial" SIZE=4><P ALIGN="JUSTIFY">
VII. Оцінювання</P>
</U></FONT>
<FONT FACE="Arial"><P ALIGN="JUSTIFY">Кожен з основних етапів з 1 по 18 оцінюється в межах <s>6</s> 7 балів. </P>

<P ALIGN="JUSTIFY">За цікаві вирішення, прийоми, додаткові можливості можуть додаватись заохочувальні бали (до двох на етап).</P>
<P ALIGN="JUSTIFY"><s>Тестові контрольні роботи сумарно оцінюються в межах 10 балів,</s> відповідь на іспиті - в межах 40 балів. </P></FONT></BODY>

</HTML>
